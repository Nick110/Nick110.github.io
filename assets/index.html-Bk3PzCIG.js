import{_ as a,r as m,c as r,b as e,d as o,a as n,w as s,e as c,o as i}from"./app-kL6t4lX4.js";const l={},d=e("p",null,[o("参考："),e("a",{href:"https://zhuanlan.zhihu.com/p/467991875",target:"_blank",rel:"noopener noreferrer"},"前端模块化")],-1),h=e("h2",{id:"es6-模块与-commonjs-模块的差异",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#es6-模块与-commonjs-模块的差异"},[e("span",null,[e("strong",null,"ES6 模块与 CommonJS 模块的差异")])])],-1),p={id:"_1-commonjs-模块输出的是一个值的拷贝-es6-模块输出的是值的引用",tabindex:"-1"},_={class:"header-anchor",href:"#_1-commonjs-模块输出的是一个值的拷贝-es6-模块输出的是值的引用"},u=c("<ul><li><strong>CommonJS 模块输出的是值的拷贝</strong>，也就是说，一旦输出一个值，<strong>模块内部的变化就影响不到这个值</strong>。</li><li>ES6模块的运行机制与 CommonJS 不一样。JS 引擎对脚本静态分析的时候，遇到模块加载命令<code>import</code>，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的<code>import</code>有点像 Unix 系统的“符号连接”，<strong>原始值变了,<code>import</code>加载的值也会跟着变</strong>。因此，<strong>ES6 模块是动态引用</strong>，并且不会缓存值，模块里面的变量绑定其所在的模块。</li></ul>",1),g={id:"_2-commonjs-模块是运行时加载-es6-模块是编译时输出接口",tabindex:"-1"},S={class:"header-anchor",href:"#_2-commonjs-模块是运行时加载-es6-模块是编译时输出接口"},f=c('<ul><li>运行时加载: CommonJS 模块就是对象；即在输入时是先加载整个模块，生成一个对象，然后再从这个对象上面读取方法，这种加载称为“运行时加载”。</li><li>编译时加载: ES6 模块不是对象，而是通过 <code>export</code> 命令显式指定输出的代码，<code>import</code>时采用静态命令的形式。即在<code>import</code>时可以指定加载某个输出值，而不是加载整个模块，这种加载称为“编译时加载”。模块内部引用的变化，会反应在外部。</li></ul><blockquote><p>CommonJS 加载的是一个对象（即<code>module.exports</code>属性），该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。</p></blockquote><p><img src="https://github.com/Nick110/8-legged-essay/assets/30553189/4e186b30-9439-4001-9005-56864cc5d959" alt="image"></p>',3);function k(E,j){const t=m("font");return i(),r("div",null,[d,h,e("h3",p,[e("a",_,[e("span",null,[e("strong",null,[o("1. "),n(t,{color:"orange"},{default:s(()=>[o("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用")]),_:1})])])])]),u,e("h3",g,[e("a",S,[e("span",null,[e("strong",null,[o("2. "),n(t,{color:"orange"},{default:s(()=>[o("CommonJS 模块是运行时加载，ES6 模块是编译时输出接口")]),_:1})])])])]),f])}const C=a(l,[["render",k],["__file","index.html.vue"]]),J=JSON.parse(`{"path":"/article/7nz8pzpf/","title":"前端模块化","lang":"zh-CN","frontmatter":{"title":"前端模块化","author":"杨少侠","createTime":"2024/06/01 17:32:02","tags":["前端"],"permalink":"/article/7nz8pzpf/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"ES6 模块与 CommonJS 模块的差异","slug":"es6-模块与-commonjs-模块的差异","link":"#es6-模块与-commonjs-模块的差异","children":[{"level":3,"title":"1. CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用","slug":"_1-commonjs-模块输出的是一个值的拷贝-es6-模块输出的是值的引用","link":"#_1-commonjs-模块输出的是一个值的拷贝-es6-模块输出的是值的引用","children":[]},{"level":3,"title":"2. CommonJS 模块是运行时加载，ES6 模块是编译时输出接口","slug":"_2-commonjs-模块是运行时加载-es6-模块是编译时输出接口","link":"#_2-commonjs-模块是运行时加载-es6-模块是编译时输出接口","children":[]}]}],"readingTime":{"minutes":1.65,"words":494},"git":{"createdTime":1718438140000,"updatedTime":1718438140000,"contributors":[{"name":"jiangshiyang","email":"1589744751@qq.com","commits":1}]},"filePathRelative":"前端/前端模块化.md","categoryList":[{"id":"9abfe4","sort":10000,"name":"前端"}]}`);export{C as comp,J as data};

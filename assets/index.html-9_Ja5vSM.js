import{_ as e,c as t,o as i,e as d}from"./app-kL6t4lX4.js";const a={},l=d(`<h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><h3 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库"><span>仓库</span></a></h3><p><img src="https://pic3.zhimg.com/80/v2-55ac74977563cc66e863b6c71d9b0ab6_1440w.webp" alt="git仓库概念"></p><h4 id="对应一些命令" tabindex="-1"><a class="header-anchor" href="#对应一些命令"><span>对应一些命令</span></a></h4><ol><li><code>git add .</code> 将工作区的文件添加至暂存区</li><li><code>git commit -m &quot;message&quot;</code> 将暂存区的修改加备注提交至本地仓库</li><li><code>git remote add origin https://github.com/name/name_cangku.git</code> 把本地仓库与远程仓库连接起来。</li><li><code>git push origin branchName</code> 将本地仓库里的提交推送至远程仓库的指定分支</li></ol><h3 id="分支" tabindex="-1"><a class="header-anchor" href="#分支"><span>分支</span></a></h3><ol><li>创建 develop 分支：<code>git branch develop</code></li><li>切换至 develop 分支：<code>git checkout develop</code></li><li>创建并切换至 develop 分支：<code>git checkout -b develop</code></li><li>查看所有分支：<code>git branch</code></li><li>在 master 上将 develop 分支合并到 master：<code>git merge develop</code></li><li>查看分支合并图：<code>git log --graph</code></li><li>删除 develop 分支：<code>git branch -d develop</code> （-D）强制删除分支</li></ol><h3 id="拉取" tabindex="-1"><a class="header-anchor" href="#拉取"><span>拉取</span></a></h3><ol><li><code>git pull == git fetch + git merge</code> 抓取远程分支的提交并合并到当前分支</li></ol><h3 id="rebase-变基" tabindex="-1"><a class="header-anchor" href="#rebase-变基"><span>Rebase（变基）</span></a></h3><p>普通 merge： <img src="http://gitbook.liuhui998.com/assets/images/figure/rebase2.png" alt="merge"> rebase： <img src="http://gitbook.liuhui998.com/assets/images/figure/rebase3.png" alt="rebase"><code>git rebase origin</code> 将当前分支分叉的记录找到最近的一个父节点,将此父节点之后的所有提交历史记录接到 origin 分支的历史记录之后。把分叉的提交历史“整理”成一条直线，看上去更直观。缺点是本地的分叉提交已经被修改过了。</p><h3 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h3><ol><li><code>git log</code> 查看日志</li><li><code>git reset --hard + 版本号</code> 回溯到指定版本</li><li>回溯到历史的版本后，想要前进到未来的版本，使用<code>git reflog</code>它帮你记录了每一次的版本号，还是使用<code>git reset --hard + 版本号</code>前进到未来的版本</li><li><code>git push -f origin master</code> 强制提交到远程仓库</li></ol><h2 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置"><span>全局配置</span></a></h2><h3 id="配置邮箱和用户名" tabindex="-1"><a class="header-anchor" href="#配置邮箱和用户名"><span>配置邮箱和用户名</span></a></h3><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> user.name</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">你的名字</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> user.email</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">你的邮箱</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见命令简写" tabindex="-1"><a class="header-anchor" href="#常见命令简写"><span>常见命令简写</span></a></h2><table><thead><tr><th>命令</th><th>简写</th><th>作用</th></tr></thead><tbody><tr><td><code>git init</code></td><td>–</td><td>创建本地仓库</td></tr><tr><td><code>git clone &#39;仓库地址</code></td><td>–</td><td>克隆仓库到本地</td></tr><tr><td><code>git branch</code></td><td><code>gb</code></td><td>查看本地分支</td></tr><tr><td><code>git branch -a</code></td><td><code>gb -a</code></td><td>查看本地 和 远程的分支</td></tr><tr><td><code>git branch -d master</code></td><td><code>gb -d master</code></td><td>删除分支</td></tr><tr><td><code>git branch -m master</code></td><td><code>gb -m master</code></td><td>修改分支名</td></tr><tr><td><code>git checkout master</code></td><td><code>gco</code></td><td>切换分支</td></tr><tr><td><code>git checkout -b master</code></td><td><code>gco -b master</code></td><td>切换并创建分支</td></tr><tr><td><code>git status</code></td><td><code>gst</code></td><td>查看是否有文件被修改</td></tr><tr><td><code>git diff</code></td><td>–</td><td>查看是否有文件被修改</td></tr><tr><td><code>git add .</code></td><td><code>gaa</code></td><td>将文件添加到暂存区</td></tr><tr><td><code>git commit -m &quot;日志&quot;</code></td><td><code>gcmsg &#39;日志&#39;</code></td><td>提交暂存区文件到本地仓库中</td></tr><tr><td><code>git merge 分支名</code></td><td><code>gm &#39;日志&#39;</code></td><td>合并分支</td></tr><tr><td><code>git fetch origin master</code></td><td>–</td><td>拉取远程分支</td></tr><tr><td><code>git pull origin master</code></td><td><code>gl origin</code></td><td>拉取仓库分支</td></tr><tr><td><code>git push origin master</code></td><td><code>gp origin</code></td><td>推送分支</td></tr><tr><td><code>git push -f origin master</code></td><td><code>gp -f origin master </code></td><td>强制推送分支</td></tr><tr><td><code>git push origin --delete master</code></td><td>–</td><td>删除远程分支</td></tr><tr><td><code>git log</code></td><td>–</td><td>查看已经提交的版本</td></tr><tr><td><code>git log --pretty=oneline</code></td><td><code>glog&#39;</code></td><td>显示提交历史的树形图/版本号</td></tr></tbody></table><h2 id="git-提交信息规范" tabindex="-1"><a class="header-anchor" href="#git-提交信息规范"><span>git 提交信息规范</span></a></h2><ul><li>fix： Bug 修复</li><li>feat： 一个新的功能或特性</li><li>style：样式修复</li><li>docs: 文档变更</li><li>merge: 分支合并</li><li>refactor: 代码重构，注意和特性、修复区分开</li><li>perf: 提升性能</li><li>build: 开发工具变动(构建、脚手架工具等)</li><li>ci: 修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle 等)的提交</li><li>test: 添加一个测试</li><li>revert: 代码回退</li><li>chore: 不属于以上类型的其他类型</li></ul><h2 id="git-工作流" tabindex="-1"><a class="header-anchor" href="#git-工作流"><span>git 工作流</span></a></h2><ul><li><code>master</code> 归档分支</li><li><code>develop</code> 发布测试分支</li><li><code>feature</code> 新开发的功能分支-拉取自 master</li><li><code>release</code> 发版分支，发版完成后归档到 master</li><li><code>hotfix</code> 热修复分支，紧急修改 bug 后自动合并到 master 和 develop 分支</li></ul><p><img src="https://img1.sycdn.imooc.com/5be084120001368312800720.jpg" alt="git工作流"></p><p><img src="http://eshop-bucket.hzpdex.com/web/1717558952395_bb3e2914f5884067a948239d12d43783~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.png" alt="git工作流"></p><p> </p><h2 id="参考-git-笔记-程序员都要掌握的-git" tabindex="-1"><a class="header-anchor" href="#参考-git-笔记-程序员都要掌握的-git"><span>参考：<a href="https://juejin.im/post/5d157bf3f265da1bcc1954e6#heading-6" target="_blank" rel="noopener noreferrer">Git 笔记 - 程序员都要掌握的 Git</a></span></a></h2><p> </p>`,27),s=[l];function c(o,r){return i(),t("div",null,s)}const h=e(a,[["render",c],["__file","index.html.vue"]]),g=JSON.parse(`{"path":"/article/hefpuq99/","title":"git学习笔记","lang":"zh-CN","frontmatter":{"title":"git学习笔记","author":"杨少侠","createTime":"2020/04/25 09:55:09","permalink":"/article/hefpuq99/","tags":["前端"],"head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"仓库","slug":"仓库","link":"#仓库","children":[]},{"level":3,"title":"分支","slug":"分支","link":"#分支","children":[]},{"level":3,"title":"拉取","slug":"拉取","link":"#拉取","children":[]},{"level":3,"title":"Rebase（变基）","slug":"rebase-变基","link":"#rebase-变基","children":[]},{"level":3,"title":"版本","slug":"版本","link":"#版本","children":[]}]},{"level":2,"title":"全局配置","slug":"全局配置","link":"#全局配置","children":[{"level":3,"title":"配置邮箱和用户名","slug":"配置邮箱和用户名","link":"#配置邮箱和用户名","children":[]}]},{"level":2,"title":"常见命令简写","slug":"常见命令简写","link":"#常见命令简写","children":[]},{"level":2,"title":"git 提交信息规范","slug":"git-提交信息规范","link":"#git-提交信息规范","children":[]},{"level":2,"title":"git 工作流","slug":"git-工作流","link":"#git-工作流","children":[]},{"level":2,"title":"参考：Git 笔记 - 程序员都要掌握的 Git","slug":"参考-git-笔记-程序员都要掌握的-git","link":"#参考-git-笔记-程序员都要掌握的-git","children":[]}],"readingTime":{"minutes":3.16,"words":947},"git":{"createdTime":1718438140000,"updatedTime":1718438140000,"contributors":[{"name":"jiangshiyang","email":"1589744751@qq.com","commits":1}]},"filePathRelative":"前端/git学习笔记.md","categoryList":[{"id":"9abfe4","sort":10000,"name":"前端"}]}`);export{h as comp,g as data};
